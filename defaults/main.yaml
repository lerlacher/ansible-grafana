---

# YUM repo URL
grafana_yumrepo_url: https://packagecloud.io/grafana/stable/el/$releasever/$basearch

# Custom YUM repo params
grafana_yumrepo_params: {}

# Package to be installed (you can force a specific version here)
grafana_pkg: grafana

# Allow grafana to bind to TCP port <1024
grafana_allow_low_port: no

# Name of the Grafana service
grafana_service: grafana-server


# Defautl values of the Grafana sysconfig options
grafana_sysconfig_grafana_user: grafana
grafana_sysconfig_grafana_group: grafana
grafana_sysconfig_grafana_home: /usr/share/grafana
grafana_sysconfig_log_dir: /var/log/grafana
grafana_sysconfig_data_dir: /var/lib/grafana
grafana_sysconfig_max_open_files: 10000
grafana_sysconfig_conf_dir: /etc/grafana
grafana_sysconfig_conf_file: "{{ grafana_sysconfig_conf_dir ~ '/grafana.ini' }}"
grafana_sysconfig_restart_on_upgrade: "false"
grafana_sysconfig_plugins_dir: /var/lib/grafana/plugins

# Defautl options of the Grafana sysconfig
grafana_sysconfig__default:
  grafana_user: "{{ grafana_sysconfig_grafana_user }}"
  grafana_group: "{{ grafana_sysconfig_grafana_group }}"
  grafana_home: "{{ grafana_sysconfig_grafana_home }}"
  log_dir: "{{ grafana_sysconfig_log_dir }}"
  data_dir: "{{ grafana_sysconfig_data_dir }}"
  max_open_files: "{{ grafana_sysconfig_max_open_files }}"
  conf_dir: "{{ grafana_sysconfig_conf_dir }}"
  conf_file: "{{ grafana_sysconfig_conf_file }}"
  restart_on_upgrade: "{{ grafana_sysconfig_restart_on_upgrade }}"
  plugins_dir: "{{ grafana_sysconfig_plugins_dir }}"

# Custom options of the Grafana sysconfig
grafana_sysconfig__custom: {}

# Final Grafana sysconfig
grafana_sysconfig: "{{
  grafana_sysconfig__default.update(grafana_sysconfig__custom) }}{{
  grafana_sysconfig__default }}"


# Logging verbosity of the LDAP config
grafana_ldap_config_verbose_logging: false

# Values of the default Servers section of the LDAP config
grafana_ldap_config_servers_host: 127.0.0.1
grafana_ldap_config_servers_port: 389
grafana_ldap_config_servers_use_ssl: false
grafana_ldap_config_servers_ssl_skip_verify: false
grafana_ldap_config_servers_bind_dn: cn=admin,dc=grafana,dc=org
grafana_ldap_config_servers_bind_password: grafana
grafana_ldap_config_servers_search_filter: "(cn=%s)"
grafana_ldap_config_servers_search_base_dns:
  - dc=grafana,dc=org

# Default Servers section of the LDAP config
grafana_ldap_config_servers__default:
  - host: "{{ grafana_ldap_config_servers_host }}"
    port: "{{ grafana_ldap_config_servers_port }}"
    use_ssl: "{{ grafana_ldap_config_servers_use_ssl }}"
    ssl_skip_verify: "{{ grafana_ldap_config_servers_ssl_skip_verify }}"
    bind_dn: "{{ grafana_ldap_config_servers_bind_dn }}"
    bind_password: "{{ grafana_ldap_config_servers_bind_password }}"
    search_filter: "{{ grafana_ldap_config_servers_search_filter }}"
    search_base_dns: "{{ grafana_ldap_config_servers_search_base_dns }}"

# Custom Servers section of the LDAP config
grafana_ldap_config_servers__custom: []

# Final Servers section of the LDAP config
grafana_ldap_config_servers: "{{
  grafana_ldap_config_servers__default +
  grafana_ldap_config_servers__custom }}"

# Values of the default Servers Atributtes section of the LDAP config
grafana_ldap_config_servers_attributes_name: givenName
grafana_ldap_config_servers_attributes_surname: sn
grafana_ldap_config_servers_attributes_username: cn
grafana_ldap_config_servers_attributes_member_of: memberOf
grafana_ldap_config_servers_attributes_email: email

# Default Servers Atributtes section of the LDAP config
grafana_ldap_config_servers_attributes__default:
  name: "{{ grafana_ldap_config_servers_attributes_name }}"
  surname: "{{ grafana_ldap_config_servers_attributes_surname }}"
  username: "{{ grafana_ldap_config_servers_attributes_username }}"
  member_of: "{{ grafana_ldap_config_servers_attributes_member_of }}"
  email: "{{ grafana_ldap_config_servers_attributes_email }}"

# Custom Servers Atributtes section of the LDAP config
grafana_ldap_config_servers_attributes__custom: {}

# Final Servers Atributtes section of the LDAP config
grafana_ldap_config_servers_attributes: "{{
  grafana_ldap_config_servers_attributes__default.update(grafana_ldap_config_servers_attributes__custom) }}{{
  grafana_ldap_config_servers_attributes__default }}"

# Values of the default Servers Group Mappings section of the LDAP config
grafana_ldap_config_servers_group_mappings_admin_group_dn: cn=admins,dc=grafana,dc=org
grafana_ldap_config_servers_group_mappings_editor_group_dn: cn=users,dc=grafana,dc=org
grafana_ldap_config_servers_group_mappings_viewer_group_dn: "*"

# Default Servers Group Mappings section of the LDAP config
grafana_ldap_config_servers_group_mappings__default:
  - group_dn: "{{ grafana_ldap_config_servers_group_mappings_admin_group_dn }}"
    org_role: Admin
  - group_dn: "{{ grafana_ldap_config_servers_group_mappings_editor_group_dn }}"
    org_role: Editor
  - group_dn: "{{ grafana_ldap_config_servers_group_mappings_viewer_group_dn }}"
    org_role: Viewer

# Custom Servers Group Mappings section of the LDAP config
grafana_ldap_config_servers_group_mappings__custom: []

# Final Servers Group Mappings section of the LDAP config
grafana_ldap_config_servers_group_mappings: "{{
  grafana_ldap_config_servers_group_mappings__default +
  grafana_ldap_config_servers_group_mappings__custom }}"

# Default LDAP config
grafana_ldap_config__default:
  verbose_logging: "{{ grafana_ldap_config_verbose_logging }}"
  servers: "{{ grafana_ldap_config_servers }}"
  servers.attributes: "{{ grafana_ldap_config_servers_attributes }}"
  servers.group_mappings: "{{ grafana_ldap_config_servers_group_mappings }}"

# Custom LDAP config
grafana_ldap_config__custom: {}

# Final LDAP config
grafana_ldap_config: "{{
  grafana_ldap_config__default.update(grafana_ldap_config__custom) }}{{
  grafana_ldap_config__default }}"


# Values of the default options of the Analytics section of the Grafana config
grafana_config_analytics_check_for_updates: "true"

# Default options of the Analytics section of the Grafana config
grafana_config_analytics__default:
  check_for_updates: "{{ grafana_config_analytics_check_for_updates }}"

# Custom options of the Analytics section of the Grafana config
grafana_config_analytics__custom: {}

# Contents of the default sections of the Grafana config
grafana_config_paths: {}
grafana_config_server: {}
grafana_config_database: {}
grafana_config_session: {}
grafana_config_analytics: "{{
  grafana_config_analytics__default.update(grafana_config_analytics__custom) }}{{
  grafana_config_analytics__default }}"
grafana_config_security: {}
grafana_config_snapshots: {}
grafana_config_users: {}
grafana_config_auth_anonymous: {}
grafana_config_auth_github: {}
grafana_config_auth_google: {}
grafana_config_auth_proxy: {}
grafana_config_auth_basic: {}
grafana_config_auth_ldap: {}
grafana_config_smtp: {}
grafana_config_emails: {}
grafana_config_log: {}
grafana_config_lob_console: {}
grafana_config_log_file: {}
grafana_config_event_publisher: {}
grafana_config_dashboard_json: {}

# Default options of the Grafana config
grafana_config__default:
  paths: "{{ grafana_config_paths }}"
  server: "{{ grafana_config_server }}"
  database: "{{ grafana_config_database }}"
  session: "{{ grafana_config_session }}"
  analytics: "{{ grafana_config_analytics }}"
  security: "{{ grafana_config_security }}"
  snapshots: "{{ grafana_config_snapshots }}"
  users: "{{ grafana_config_users }}"
  auth.anonymous: "{{ grafana_config_auth_anonymous }}"
  auth.github: "{{ grafana_config_auth_github }}"
  auth.google: "{{ grafana_config_auth_google }}"
  auth.proxy: "{{ grafana_config_auth_proxy }}"
  auth.basic: "{{ grafana_config_auth_basic }}"
  auth.ldap: "{{ grafana_config_auth_ldap }}"
  smtp: "{{ grafana_config_smtp }}"
  emails: "{{ grafana_config_emails }}"
  log: "{{ grafana_config_log }}"
  log.console: "{{ grafana_config_lob_console }}"
  log.file: "{{ grafana_config_log_file }}"
  event_publisher: "{{ grafana_config_event_publisher }}"
  dashboards.json: "{{ grafana_config_dashboard_json }}"

# Custom options of the Grafana config
grafana_config__custom: {}

# Change this option to false to disable reporting.
grafana_analytics_reporting_enabled: "true"

# Google Analytics universal tracking code, only enabled if you specify an id here
grafana_analytics_google_analytics_ua_id: ""

grafana_analytics:
  reporting_enabled: "{{ grafana_analytics_reporting_enabled }}"
  google_analytics_ua_id: "{{ grafana_analytics_google_analytics_ua_id }}"


# Default admin user, created on startup
grafana_security_admin_user: admin

# Default admin password, can be changed before first start of grafana,  or in profile settings
grafana_security_admin_password: admin

# Used for signing
grafana_security_secret_key: SW2YcwTIb9zpOOhoPsMm

# Auto-login remember days
grafana_security_login_remember_days: 7
grafana_security_cookie_username: grafana_user
grafana_security_cookie_remember_name: grafana_remember

grafana_security:
  admin_user: "{{ grafana_security_admin_user }}"
  admin_password: "{{ grafana_security_admin_password }}"
  secret_key: "{{ grafana_security_secret_key }}"
  login_remember_days: "{{ grafana_security_login_remember_days }}"
  cookie_username: "{{ grafana_security_cookie_username }}"
  cookie_remember_name: "{{ grafana_security_cookie_remember_name }}"


# Disable user signup / registration
grafana_users_allow_sign_up: "true"

# Allow non admin users to create organizations
grafana_users_allow_org_create: "true"

# Set to true to automatically assign new users to the default organization (id 1)
grafana_users_auto_assign_org: "true"

# Default role new users will be automatically assigned (if disabled above is set to true)
grafana_users_auto_assign_org_role: Viewer

grafana_users:
  allow_sign_up: "{{ grafana_users_allow_sign_up }}"
  allow_org_create: "{{ grafana_users_allow_org_create }}"
  auto_assign_org: "{{ grafana_users_auto_assign_org }}"
  auto_assign_org_role: "{{ grafana_users_auto_assign_org_role }}"


# Enable anonymous access
grafana_auth__anonymous_enabled: "false"

# Specify organization name that should be used for unauthenticated users
grafana_auth__anonymous_org_name: Main Org.

# Specify role for unauthenticated users
grafana_auth__anonymous_org_role: Viewer

grafana_auth__anonymous:
  enabled: "{{ grafana_auth__anonymous_enabled }}"
  org_name: "{{ grafana_auth__anonymous_org_name }}"
  org_role: "{{ grafana_auth__anonymous_org_role }}"


grafana_auth__github_enabled: "false"
grafana_auth__github_client_id: some_id
grafana_auth__github_client_secret: some_secret
grafana_auth__github_scopes: user:email
grafana_auth__github_auth_url: https://github.com/login/oauth/authorize
grafana_auth__github_token_url: https://github.com/login/oauth/access_token
grafana_auth__github_api_url: https://api.github.com/user
grafana_auth__github_allowed_domains: ""
grafana_auth__github_allow_sign_up: "false"

grafana_auth__github:
  enabled: "{{ grafana_auth__github_enabled }}"
  client_id: "{{ grafana_auth__github_client_id }}"
  client_secret: "{{ grafana_auth__github_client_secret }}"
  scopes: "{{ grafana_auth__github_scopes }}"
  auth_url: "{{ grafana_auth__github_auth_url }}"
  token_url: "{{ grafana_auth__github_token_url }}"
  api_url: "{{ grafana_auth__github_api_url }}"
  allowed_domains: "{{ grafana_auth__github_allowed_domains }}"
  allow_sign_up: "{{ grafana_auth__github_allow_sign_up }}"


grafana_auth__google_enabled: "false"
grafana_auth__google_client_id: some_client_id
grafana_auth__google_client_secret: some_client_secret
grafana_auth__google_scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
grafana_auth__google_auth_url: https://accounts.google.com/o/oauth2/auth
grafana_auth__google_token_url: https://accounts.google.com/o/oauth2/token
grafana_auth__google_api_url: https://www.googleapis.com/oauth2/v1/userinfo
grafana_auth__google_allowed_domains: ""
grafana_auth__google_allow_sign_up: "false"

grafana_auth__google:
  enabled: "{{ grafana_auth__google_enabled }}"
  client_id: "{{ grafana_auth__google_client_id }}"
  client_secret: "{{ grafana_auth__google_client_secret }}"
  scopes: "{{ grafana_auth__google_scopes }}"
  auth_url: "{{ grafana_auth__google_auth_url }}"
  token_url: "{{ grafana_auth__google_token_url }}"
  api_url: "{{ grafana_auth__google_api_url }}"
  allowed_domains: "{{ grafana_auth__google_allowed_domains }}"
  allow_sign_up: "{{ grafana_auth__google_allow_sign_up }}"


# Either "console", "file"
# Use comma to separate multiple modes, e.g. "console, file"
grafana_log_mode: console, file

# Buffer length of channel, keep it as it is if you don't know what it is.
grafana_log_buffer_len: 10000

# Either "Trace", "Debug", "Info", "Warn", "Error", "Critical", default is "Trace"
grafana_log_level: Trace

grafana_log:
  mode: "{{ grafana_log_mode }}"
  buffer_len: "{{ grafana_log_buffer_len }}"
  level: "{{ grafana_log_level }}"


# Log level for "console" mode only
grafana_log__console_level: ""

grafana_log__console:
  level: "{{ grafana_log__console_level }}"


# Log level for "file" mode only
grafana_log__file_level: ""

# This enables automated log rotate(switch of following options), default is true
grafana_log__file_log_rotate: "true"

# Max line number of single file, default is 1000000
grafana_log__file_max_lines: 1000000

# Max size shift of single file, default is 28 means 1 << 28, 256MB
grafana_log__file_max_lines_shift: 28

# Segment log daily, default is true
grafana_log__file_daily_rotate: "true"

# Expired days of log file(delete after max days), default is 7
grafana_log__file_max_days: 7

grafana_log__file:
  level: "{{ grafana_log__file_level }}"
  log_rotate: "{{ grafana_log__file_log_rotate }}"
  max_lines: "{{ grafana_log__file_max_lines }}"
  max_lines_shift: "{{ grafana_log__file_max_lines_shift }}"
  daily_rotate: "{{ grafana_log__file_daily_rotate }}"
  max_days: "{{ grafana_log__file_max_days }}"


grafana_event_publisher_enabled: "false"
grafana_event_publisher_rabbitmq_url: amqp://localhost/
grafana_event_publisher_exchange: grafana_events

grafana_event_publisher:
  enabled: "{{ grafana_event_publisher_enabled }}"
  rabbitmq_url: "{{ grafana_event_publisher_rabbitmq_url }}"
  exchange: "{{ grafana_event_publisher_exchange }}"


grafana_config:
  app_mode: "{{ grafana_app_mode }}"
  paths: "{{ grafana_paths }}"
  server: "{{ grafana_server }}"
  database: "{{ grafana_database }}"
  session: "{{ grafana_session }}"
  analytics: "{{ grafana_analytics }}"
  security: "{{ grafana_security }}"
  users: "{{ grafana_users }}"
  auth.anonymous: "{{ grafana_auth__anonymous }}"
  auth.github: "{{ grafana_auth__github }}"
  auth.google: "{{ grafana_auth__google }}"
  log: "{{ grafana_log }}"
  log.console: "{{ grafana_log__console }}"
  log.file: "{{ grafana_log__file }}"
  event_publisher: "{{ grafana_event_publisher }}"

grafana_apt_repo: deb https://packagecloud.io/grafana/stable/debian/ wheezy main
